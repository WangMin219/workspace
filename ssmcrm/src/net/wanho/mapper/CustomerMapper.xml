<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.wanho.mapper.CustomerMapper" >
  <resultMap id="BaseResultMap" type="net.wanho.model.Customer" >
    <id column="CUSTOMER_ID" property="customerId" jdbcType="INTEGER" />
    <result column="CUSTOMER_NAME" property="customerName" jdbcType="VARCHAR" />
    <result column="POST_CODE" property="postCode" jdbcType="VARCHAR" />
    <result column="FIELD_ID" property="fieldId" jdbcType="INTEGER" />
    <result column="SOURCE_ID" property="sourceId" jdbcType="INTEGER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="EMPLOYEE_NUMBERS" property="employeeNumbers" jdbcType="VARCHAR" />
    <result column="EMPLOYEE_ID" property="employeeId" jdbcType="INTEGER" />
    <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
    <result column="TAG" property="tag" jdbcType="VARCHAR" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    CUSTOMER_ID, CUSTOMER_NAME, POST_CODE, FIELD_ID, SOURCE_ID, CREATE_TIME, UPDATE_TIME, 
    EMPLOYEE_NUMBERS, EMPLOYEE_ID, ADDRESS, TAG, REMARKS
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="net.wanho.model.CustomerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customer
    where CUSTOMER_ID = #{customerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customer
    where CUSTOMER_ID = #{customerId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="net.wanho.model.CustomerExample" >
    delete from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.wanho.model.Customer" >
    <selectKey resultType="java.lang.Integer" keyProperty="customerId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer (CUSTOMER_NAME, POST_CODE, FIELD_ID, 
      SOURCE_ID, CREATE_TIME, UPDATE_TIME, 
      EMPLOYEE_NUMBERS, EMPLOYEE_ID, ADDRESS, 
      TAG, REMARKS)
    values (#{customerName,jdbcType=VARCHAR}, #{postCode,jdbcType=VARCHAR}, #{fieldId,jdbcType=INTEGER}, 
      #{sourceId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{employeeNumbers,jdbcType=VARCHAR}, #{employeeId,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, 
      #{tag,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="net.wanho.model.Customer" >
    <selectKey resultType="java.lang.Integer" keyProperty="customerId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="customerName != null" >
        CUSTOMER_NAME,
      </if>
      <if test="postCode != null" >
        POST_CODE,
      </if>
      <if test="fieldId != null" >
        FIELD_ID,
      </if>
      <if test="sourceId != null" >
        SOURCE_ID,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="employeeNumbers != null" >
        EMPLOYEE_NUMBERS,
      </if>
      <if test="employeeId != null" >
        EMPLOYEE_ID,
      </if>
      <if test="address != null" >
        ADDRESS,
      </if>
      <if test="tag != null" >
        TAG,
      </if>
      <if test="remarks != null" >
        REMARKS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="customerName != null" >
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="postCode != null" >
        #{postCode,jdbcType=VARCHAR},
      </if>
      <if test="fieldId != null" >
        #{fieldId,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null" >
        #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeNumbers != null" >
        #{employeeNumbers,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="tag != null" >
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.wanho.model.CustomerExample" resultType="java.lang.Integer" >
    select count(*) from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update customer
    <set >
      <if test="record.customerId != null" >
        CUSTOMER_ID = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.customerName != null" >
        CUSTOMER_NAME = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.postCode != null" >
        POST_CODE = #{record.postCode,jdbcType=VARCHAR},
      </if>
      <if test="record.fieldId != null" >
        FIELD_ID = #{record.fieldId,jdbcType=INTEGER},
      </if>
      <if test="record.sourceId != null" >
        SOURCE_ID = #{record.sourceId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.employeeNumbers != null" >
        EMPLOYEE_NUMBERS = #{record.employeeNumbers,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeId != null" >
        EMPLOYEE_ID = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.address != null" >
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.tag != null" >
        TAG = #{record.tag,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        REMARKS = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update customer
    set CUSTOMER_ID = #{record.customerId,jdbcType=INTEGER},
      CUSTOMER_NAME = #{record.customerName,jdbcType=VARCHAR},
      POST_CODE = #{record.postCode,jdbcType=VARCHAR},
      FIELD_ID = #{record.fieldId,jdbcType=INTEGER},
      SOURCE_ID = #{record.sourceId,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      EMPLOYEE_NUMBERS = #{record.employeeNumbers,jdbcType=VARCHAR},
      EMPLOYEE_ID = #{record.employeeId,jdbcType=INTEGER},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      TAG = #{record.tag,jdbcType=VARCHAR},
      REMARKS = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.wanho.model.Customer" >
    update customer
    <set >
      <if test="customerName != null" >
        CUSTOMER_NAME = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="postCode != null" >
        POST_CODE = #{postCode,jdbcType=VARCHAR},
      </if>
      <if test="fieldId != null" >
        FIELD_ID = #{fieldId,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null" >
        SOURCE_ID = #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeNumbers != null" >
        EMPLOYEE_NUMBERS = #{employeeNumbers,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null" >
        EMPLOYEE_ID = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
      <if test="tag != null" >
        TAG = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        REMARKS = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where CUSTOMER_ID = #{customerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.wanho.model.Customer" >
    update customer
    set CUSTOMER_NAME = #{customerName,jdbcType=VARCHAR},
      POST_CODE = #{postCode,jdbcType=VARCHAR},
      FIELD_ID = #{fieldId,jdbcType=INTEGER},
      SOURCE_ID = #{sourceId,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      EMPLOYEE_NUMBERS = #{employeeNumbers,jdbcType=VARCHAR},
      EMPLOYEE_ID = #{employeeId,jdbcType=INTEGER},
      ADDRESS = #{address,jdbcType=VARCHAR},
      TAG = #{tag,jdbcType=VARCHAR},
      REMARKS = #{remarks,jdbcType=VARCHAR}
    where CUSTOMER_ID = #{customerId,jdbcType=INTEGER}
  </update>
</mapper>